# import asyncio
# import logging
# import random
# from aiogram import Bot, Dispatcher, types
# from aiogram.filters import Command
# from config import BOT_TOKEN
# from storage import ScoreStorage
# from game_logic import NumberGuessGame

# logging.basicConfig(level=logging.INFO)

# # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
# bot = Bot(token=BOT_TOKEN)
# dp = Dispatcher()

# # –•—Ä–∞–Ω–∏–ª–∏—â–µ
# storage = ScoreStorage()
# games = {}  # user_id -> NumberGuessGame


# @dp.message(Command("start"))
# async def start_game(message: types.Message):
#     user_id = str(message.from_user.id)
#     games[user_id] = NumberGuessGame(user_id, storage)
#     await message.answer(
#         "üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≥—Ä—É '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!\n\n"
#         "–ü—Ä–∞–≤–∏–ª–∞:\n"
#         " - üéØ –¢–æ—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ = +3 –æ—á–∫–∞\n"
#         " - ¬±5 –æ—Ç —á–∏—Å–ª–∞ = +1 –æ—á–∫–æ\n"
#         " - –∏–Ω–∞—á–µ -1 –æ—á–∫–æ\n\n"
#         "–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100 üëá"
#     )

# @dp.message()
# async def handle_guess(message: types.Message):
#     user_id = str(message.from_user.id)

#     if user_id not in games:
#         games[user_id] = NumberGuessGame(user_id, storage)

#     try:
#         number = int(message.text)
#     except ValueError:
#         await message.answer("‚ö†Ô∏è –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100!")
#         return

#     game = games[user_id]
#     result = game.guess(number)
#     await message.answer(result)

# async def main():
#     await dp.start_polling(bot)

# if __name__ == "__main__":
#     asyncio.run(main())


import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from config import BOT_TOKEN

logging.basicConfig(level=logging.INFO)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

WEBAPP_URL = "https://yourdomain.com/game"  # –∑–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–≤–æ–π URL (–≥–¥–µ –ª–µ–∂–∏—Ç webapp)

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="‚ñ∂Ô∏è –ò–≥—Ä–∞—Ç—å", web_app=WebAppInfo(url=WEBAPP_URL))]
        ],
        resize_keyboard=True
    )
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç üëã –≠—Ç–æ –∏–≥—Ä–∞ üéÆ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'!\n"
        "–ñ–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É üëá",
        reply_markup=keyboard
    )

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
